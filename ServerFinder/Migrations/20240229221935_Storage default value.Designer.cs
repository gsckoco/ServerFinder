// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerFinder.Context;

#nullable disable

namespace ServerFinder.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20240229221935_Storage default value")]
    partial class Storagedefaultvalue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ServerFinder.Entities.TblCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("companyName");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("website");

                    b.HasKey("Id");

                    b.ToTable("tbl_Company");
                });

            modelBuilder.Entity("ServerFinder.Entities.TblProcessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("BaseFreq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1000)
                        .HasColumnName("baseFreq");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Intel")
                        .HasColumnName("brand");

                    b.Property<int>("ECores")
                        .HasColumnType("int")
                        .HasColumnName("eCores");

                    b.Property<int>("EThreads")
                        .HasColumnType("int")
                        .HasColumnName("eThreads");

                    b.Property<int>("PCores")
                        .HasColumnType("int")
                        .HasColumnName("pCores");

                    b.Property<int>("PThreads")
                        .HasColumnType("int")
                        .HasColumnName("pThreads");

                    b.Property<string>("ProcessorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("processorName");

                    b.HasKey("Id");

                    b.ToTable("tbl_Processors");
                });

            modelBuilder.Entity("ServerFinder.Entities.TblServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Bandwidth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1000)
                        .HasColumnName("bandwidth");

                    b.Property<int>("Company")
                        .HasColumnType("int")
                        .HasColumnName("company");

                    b.Property<int>("ConnectionSpeed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1000)
                        .HasColumnName("connectionSpeed");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("currency");

                    b.Property<bool>("IsCustomisable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isCustomisable");

                    b.Property<bool>("IsEcc")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isEcc");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("Processor")
                        .HasColumnType("int")
                        .HasColumnName("processor");

                    b.Property<int>("ProcessorCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("processorCount");

                    b.Property<int>("Ram")
                        .HasColumnType("int")
                        .HasColumnName("ram");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("serverName");

                    b.Property<string>("Storage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)")
                        .HasDefaultValue("")
                        .HasColumnName("storage");

                    b.Property<int>("TotalStorage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1024)
                        .HasColumnName("totalStorage");

                    b.HasKey("Id");

                    b.HasIndex("Company");

                    b.HasIndex("Processor");

                    b.ToTable("tbl_Servers");
                });

            modelBuilder.Entity("ServerFinder.Entities.TblServer", b =>
                {
                    b.HasOne("ServerFinder.Entities.TblCompany", "CompanyNavigation")
                        .WithMany("TblServers")
                        .HasForeignKey("Company")
                        .IsRequired()
                        .HasConstraintName("FK_tbl_Servers_tbl_Company");

                    b.HasOne("ServerFinder.Entities.TblProcessor", "ProcessorNavigation")
                        .WithMany("TblServers")
                        .HasForeignKey("Processor")
                        .IsRequired()
                        .HasConstraintName("FK_tbl_Servers_tbl_Processors");

                    b.Navigation("CompanyNavigation");

                    b.Navigation("ProcessorNavigation");
                });

            modelBuilder.Entity("ServerFinder.Entities.TblCompany", b =>
                {
                    b.Navigation("TblServers");
                });

            modelBuilder.Entity("ServerFinder.Entities.TblProcessor", b =>
                {
                    b.Navigation("TblServers");
                });
#pragma warning restore 612, 618
        }
    }
}
